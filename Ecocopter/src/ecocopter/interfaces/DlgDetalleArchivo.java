/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ecocopter.interfaces;

import ecocopter.bean.Cabecera;
import ecocopter.bean.Detalle;
import ecocopter.bean.Historial;
import ecocopter.bean.VariablesEcocopter;
import ecocopter.dao.FacadeEcopter;
import java.awt.Dimension;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;

/**
 *
 * @author Cesar
 */
public class DlgDetalleArchivo extends javax.swing.JFrame {
DefaultTableModel dt=new DefaultTableModel();//instacamos ala tabla por defecto
FacadeEcopter facade=new FacadeEcopter();//instaciamos a procesmp
    /**
     * Creates new form DlgDetalleArchivo
     */
    public DlgDetalleArchivo() {
        initComponents();
        namesColumns();
        habilita();
        this.setTitle("Detalle de Archivo");
        cargarTamano();
    }
    public void namesColumns(){
        JTableDetalle.setModel(dt);
       
        dt.addColumn("CODIGO");
        dt.addColumn("REF ARCHIVO");
        dt.addColumn("FECHA");
        dt.addColumn("DISCREPANCIA");
        dt.addColumn("ACCION");
        dt.addColumn("CODIGO ATA");
        
     
       
    }
    public void cargarTamano(){//llamar este metodo en el constructor
     
    // this.setMinimumSize(new Dimension(800, 400)); //Minima dimension
     this.setSize(800, 500);
     this.setResizable(false); // no permit cambiar de tamaño
     this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);//inavilitar el cerrado
     this.setLocationRelativeTo(null); 
    }
    
    public void cargaGrillaDetalle(String idArchivo){
     dt.setRowCount(0);
     for(Detalle x:facade.ListDetalle(idArchivo)){
      

         dt.addRow(new Object[]{x.getIdArchivo(),x.getRefArchivo(),x.getFecha(),x.getDiscrepancia(),x.getAccion(),
            x.getCodAta()} );
        }   
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableDetalle = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        btnDescarga = new javax.swing.JButton();
        btnProcesar = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JTableDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(JTableDetalle);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnDescarga.setText("Descargar Información");
        btnDescarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargaActionPerformed(evt);
            }
        });

        btnProcesar.setText("Procesar Información");
        btnProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnProcesar)
                .addGap(71, 71, 71)
                .addComponent(btnDescarga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcesar)
                    .addComponent(btnDescarga)
                    .addComponent(btnSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
       DlgCabeceraArchivo cab=new DlgCabeceraArchivo();
       cab.setVisible(true);
       this.setVisible(false);
        
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnDescargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargaActionPerformed
      descargaFile();
        
    }//GEN-LAST:event_btnDescargaActionPerformed

    private void btnProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarActionPerformed
    
    procesar();  
       
    }//GEN-LAST:event_btnProcesarActionPerformed
   public void habilita(){
    if(VariablesEcocopter.vEstado.equalsIgnoreCase("P")){
    btnProcesar.setEnabled(false);    
    }else{
    btnProcesar.setEnabled(true);
     
    }       
   }
    public String getFecha(){
     String  fechaJava ="";
    Calendar  fec=new GregorianCalendar(); 
    int ano=fec.get(Calendar.YEAR);
    int mes=fec.get(Calendar.MONTH)+1;
    int dia=fec.get(Calendar.DAY_OF_MONTH);
    return fechaJava = dia+"-"+mes+"-"+ano;      
   }
    public void procesar(){
     FacadeEcopter facade=new FacadeEcopter();
        List<Historial> dtoHistorial = new ArrayList<Historial>();
     
      for(int i=0;i<JTableDetalle.getRowCount();i++){
            String  idArchivo=(String)(JTableDetalle.getValueAt(i, 0)); 
            String refArchivo=(String)(JTableDetalle.getValueAt(i, 1));
            String fecha=(String)(JTableDetalle.getValueAt(i, 2));   
            fecha=fecha.substring(0, 10);//solo extraemos la informacion necesaria
            String codAta=(String)(JTableDetalle.getValueAt(i, 5));
           dtoHistorial.add(new Historial(idArchivo,VariablesEcocopter.vIdNave,refArchivo,fecha,this.getFecha(),codAta));
        } 
      this.grabaHistorial(dtoHistorial, facade);
      
    }
    
    private void grabaHistorial(List<Historial> historial,FacadeEcopter facade){
     for(Historial hist : historial){
           facade.grabaHistorial(new Historial(hist.getIdArchivo(),hist.getIdNave(),hist.getRefArchivo(),hist.getFecha(),hist.getFecProces(),hist.getCodAta()));
     }
     this.grabaHistorial(facade);
     JOptionPane.showMessageDialog(null,"Archivo Procesado","Información",JOptionPane.INFORMATION_MESSAGE);
     DlgCabeceraArchivo cab=new DlgCabeceraArchivo();
     cab.setVisible(true);
     this.setVisible(false);
     }
    private void grabaHistorial(FacadeEcopter facade){
        facade.UpDateEstado(new Cabecera(VariablesEcocopter.vIdArchivo,"P"));
    }
    
    public void descargaFile() {
        List<Detalle> dtoDescarga = new ArrayList<Detalle>();
        ArrayList< ArrayList<String>> lstDesca=new ArrayList<ArrayList<String>>();
       
        for(int i=0;i<JTableDetalle.getRowCount();i++){
            
            String refArchivo=(String)(JTableDetalle.getValueAt(i, 1));
            String fecha=(String)(JTableDetalle.getValueAt(i, 2));
            String discrepancia=(String)(JTableDetalle.getValueAt(i, 3));
            String accion=(String)(JTableDetalle.getValueAt(i, 4));
            String codAta=(String)(JTableDetalle.getValueAt(i, 5));
            System.out.println(refArchivo+"-"+fecha+"-"+discrepancia+"-"+accion+"-"+codAta);
            dtoDescarga.add(new Detalle(refArchivo,fecha,discrepancia,accion,codAta));
        } 
            
       System.out.println("paso");
        String nomFile="";      
        String outputFile="";
        String path="";
              try {
                  path = "C:\\Ecocopter\\";
                   
                   nomFile="File"+"-"+VariablesEcocopter.vIdArchivo+"-"+this.getFecha().trim()+".xls";
                   outputFile = path+nomFile;
                   File file = new File(path);
                    
                   if(!file.exists()){          
                       file.mkdirs();// SI NO EXISTE LA CARPETA LA CREA;
                   }       
                  File ficheroUsuarios = new File(outputFile);
                  if(ficheroUsuarios.exists()){
                     
                      int resp = JOptionPane.showConfirmDialog(null, "¿Esta seguro de reemplazar el documento?", "Ya existe un archivo:"+nomFile+"..!", JOptionPane.YES_NO_OPTION);
                      if(resp==JOptionPane.YES_OPTION){ 
                          ficheroUsuarios.delete();  
                 
            HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFSheet sheet = workbook.createSheet("Reporte de productos");

            Cell col1;
            Cell col2;
            Cell col3;
            Cell col4;
            Cell col5;
            int i=0;
            for (Detalle des : dtoDescarga) {//columnas
                 System.out.println("paso2");
              
                String  refArchivo = des.getRefArchivo();
                String fecha=des.getFecha();
                String discrepancia=des.getDiscrepancia();
                String accion=des.getAccion();
                String codAta=des.getCodAta();
                Row fila = sheet.createRow(i);
                i=i+1;
                 col1 = fila.createCell(0);
                 col2 = fila.createCell(1);
                 col3 = fila.createCell(2);
                 col4 = fila.createCell(3);
                 col5 = fila.createCell(4);
                   System.out.println(refArchivo+"-"+fecha+"-"+discrepancia+"-"+accion+"-"+codAta);
                 col1.setCellValue(refArchivo);
                 col2.setCellValue(fecha);
                 col3.setCellValue(discrepancia);
                 col4.setCellValue(accion);
                 col5.setCellValue(codAta);
}
FileOutputStream out = new FileOutputStream(outputFile);
      workbook.write(out);
      out.close();
JOptionPane.showMessageDialog( null," Archivo descargado..!!\n Ruta:"+outputFile,"Información",JOptionPane.INFORMATION_MESSAGE);
                 
                   
                             }
                  }else{
              HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFSheet sheet = workbook.createSheet("Reporte de productos");

            Cell col1;
            Cell col2;
            Cell col3;
            Cell col4;
            Cell col5;
            int i=0;
              System.out.println("long"+dtoDescarga.size());
            for (Detalle des : dtoDescarga) {//columnas
                 System.out.println("paso2");
                
                String  refArchivo = des.getRefArchivo();
                String fecha=des.getFecha();
                String discrepancia=des.getDiscrepancia();
                String accion=des.getAccion();
                String codAta=des.getCodAta();
                Row fila = sheet.createRow(i);
                i=i+1;
                 col1 = fila.createCell(0);
                 col2 = fila.createCell(1);
                 col3 = fila.createCell(2);
                 col4 = fila.createCell(3);
                 col5 = fila.createCell(4);
                   System.out.println(refArchivo+"-"+fecha+"-"+discrepancia+"-"+accion+"-"+codAta);
                 col1.setCellValue(refArchivo);
                 col2.setCellValue(fecha);
                 col3.setCellValue(discrepancia);
                 col4.setCellValue(accion);
                 col5.setCellValue(codAta);
}
 FileOutputStream out = new FileOutputStream(outputFile);
      workbook.write(out);
      out.close();
      
JOptionPane.showMessageDialog( null," Archivo descargado..!!\n Ruta:"+outputFile,"Información",JOptionPane.INFORMATION_MESSAGE);
      
                  }
                 
              } 
              catch (Exception e) {
                  e.printStackTrace();
                 // FarmaUtility.showMessage(this,"Error al descagar el Archivo", txtGarantizado); 
              }
              
    


    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgDetalleArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgDetalleArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgDetalleArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgDetalleArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DlgDetalleArchivo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableDetalle;
    private javax.swing.JButton btnDescarga;
    private javax.swing.JButton btnProcesar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
